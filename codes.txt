>> Compiler's default constructor

using System;
class person //object is a base class for any given class
{
    readonly int pid; //instance readonly variable
    string pname; //instance variable
    int age;
    public static void Main()
    {
        person obj = new person(); //obj is an object of class person
        obj.pname = "Virat Kohli";
        obj.age = 34;

        Console.WriteLine(obj.pid + " " +obj.pname + " "+obj.age);
    }
}

-------------------------------------------------------------------------------------------------------------------------------------

>> User's own default constructor

using System; // system is a namespace contains multiple classes
class person //object is a base class for any given class
{
    readonly int pid; //instance readonly variable
    string pname; //instance variable
    int age;
    person()
    {
        pid = 201;
    }
    public static void Main()
    {
        person obj = new person(); //obj is an object of class person
        obj.pname = "Virat Kohli";
        obj.age = 34;

        Console.WriteLine(obj.pid + " " +obj.pname + " "+obj.age);
    }
}

-------------------------------------------------------------------------------------------------------------------------------------

>> User's own parameterized constructor

using System; // system is a namespace contains multiple classes
class person //object is a base class for any given class
{
    readonly int pid; //instance readonly variable
    string pname; //instance variable
    int age;
    person(int id)
    {
        pid = id;
    }
    public static void Main()
    {
        person obj = new person(183); //obj is an object of class person
        obj.pname = "Virat Kohli";
        obj.age = 34;

        Console.WriteLine(obj.pid + " " +obj.pname + " "+obj.age);
    }
}

................................................................................................................................................

>> STRING PALINDROME OR NOT

using System;

class checkpalindrome
{
    public static void Main(string[] str)
    {
        string strr; //Instance Variable
        string revstr = string.Empty;
        Console.WriteLine("Program to check a string is Palindrome or not \n ");
        Console.WriteLine("Enter a string here = ");
        strr = Console.ReadLine().ToLower();
        for(int i = strr.Length-1; i>=0; i-- )
        {
            revstr += strr[i].ToString(); 
        }
        if(revstr==strr)
        {
            Console.WriteLine("\n Entered String is Palindrome ");
        }
        else
        {
            Console.WriteLine("\n Entered String  is not Palindrome");
        }
    }
}

------------------------------------------------------------------------------------------------------------------------------------------

>> Check Duplicate Characters

using System;

class duplicatechar
{
    static void Main(string[] args)
    {
        string str = string.Empty;
        Console.WriteLine("Enter any string = \n");
        str = Console.ReadLine();

        while (str.Length > 0)
        {
            int count = 0;
            Console.WriteLine(str[0] + "=");
            for (int i = 0; i < str.Length; i++)
            {
                if (str[0] == str[i])
                {
                    count++;
                }

            }
            Console.WriteLine(count);
            str = str.Replace(str[0].ToString(), string.Empty);

            Console.ReadLine();
        }
    }
}